{"version":3,"sources":["img/logo.png","services/auth.service.js","components/navbar.component.js","components/login.component.js","services/auth-header.js","services/user.service.js","components/board-user.component.js","components/board-moderator.component.js","components/board-admin.component.js","services/admin.service.js","components/Admin/Validation.js","components/Admin/List/TableBody.jsx","components/Admin/List/TableHeader.jsx","components/Admin/List/Table.jsx","components/Admin/List/UsersTable.jsx","components/utils/paginate.js","components/utils/pagination.jsx","components/Admin/List/SearchBox.jsx","components/Admin/List/Users.jsx","components/Admin/AdminMainPage.jsx","components/MainAferLogin.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","username","password","axios","post","API_URL","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","email","parse","getItem","Navbar","props","logOut","bind","state","currentUser","undefined","user","AuthService","getCurrentUser","this","setState","logout","className","src","logo","alt","style","width","to","roles","includes","fontSize","href","onClick","icon","faSignOutAlt","Component","required","value","role","Login","loading","message","redirect","onChangeUsername","e","target","onChangePassword","handleLogin","a","preventDefault","form","validateAll","checkBtn","context","_errors","length","login","history","push","window","location","reload","error","marginTop","backgroundColor","paddingBottom","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","display","authHeader","Authorization","console","log","get","headers","BoardUser","content","UserService","getUserBoard","toString","BoardModerator","getModeratorBoard","BoardAdmin","getAdminBoard","body","id","delete","vusername","TableBody","renderCell","item","column","_","path","createKey","key","columns","map","TableHeader","raiseSort","sortColumn","order","onSort","renderSortIcon","label","Table","UsersTable","confirm","onDelete","aria-hidden","onDisable","onResetPassword","users","paginate","items","pageNumber","pageSize","startIndex","slice","take","Pagination","itemsCount","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","SearchBox","placeholder","currentTarget","Users","searchQuery","componentDidMount","AdminService","getUsers","handleSearch","query","handleSort","handlePageChange","handleDelete","originalUsers","filter","u","deleteUser","status","alert","handleDisable","handleResetPassword","getPagedData","allUsers","filtered","m","toLowerCase","startsWith","movies","orderBy","totalCount","count","AdminMainPage","successful","selectedRole","userReady","modalIsOpen","openModal","closeModal","handleClearFields","pass","handleCreate","createUser","res","resMessage","handleSelectChange","handleInputChange","event","Fragment","aria-describedby","defaultChecked","MainAfterLogin","indexOf","App","document","title","exact","component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.6f0a0256.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.86652faf.png\";","import axios from 'axios';\n\nconst API_URL = process.env.PUBLIC_URL + '/api/auth/';\n// const API_URL = 'http://localhost:8080/api/auth/';\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + 'signin', {\n        username,\n        password,\n      })\n      .then((response) => {\n        if (response.data.accessToken) {\n          localStorage.setItem('user', JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n  }\n\n  register(username, email, password) {\n    return axios.post(API_URL + 'signup', {\n      username,\n      password,\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n}\n\nexport default new AuthService();\n","import React, { Component } from 'react';\nimport AuthService from '../services/auth.service';\nimport logo from '../img/logo.png';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\n\nexport default class Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      currentUser: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n      });\n    }\n  }\n\n  logOut() {\n    AuthService.logout();\n  }\n\n  render() {\n    const { currentUser } = this.state;\n    return (\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark col-12 col-sm-12 col-md-12 col-lg-12\">\n        <img src={logo} alt=\"logo\" style={{ width: '5rem' }} />\n        <div className=\"navbar-nav mr-auto\"></div>\n\n        {currentUser && (\n          <div className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <Link to={'/dis-app/home'} className=\"nav-link\">\n                {currentUser.roles.includes('ROLE_SPEC') ? (\n                  <div>\n                    {currentUser.username} <br />\n                    <span style={{ fontSize: 'small' }}>\n                      (Švietimo specialistas)\n                    </span>\n                  </div>\n                ) : currentUser.roles.includes('ROLE_PARENT') ? (\n                  <div>\n                    {currentUser.username}\n                    <br />\n                    <span style={{ fontSize: 'small' }}>Vaiko atstovas</span>\n                  </div>\n                ) : (\n                  'Administratorius'\n                )}\n              </Link>\n            </li>\n            <li className=\"nav-item my-auto\">\n              <a href=\"/dis-app/\" className=\"nav-link\" onClick={this.logOut}>\n                {' '}\n                <FontAwesomeIcon icon={faSignOutAlt} />\n                Atsijungti\n              </a>\n            </li>\n          </div>\n        )}\n      </nav>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport logo from \"../img/logo.png\";\n\nimport AuthService from \"../services/auth.service\";\nimport { Redirect } from \"react-router-dom\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Privalomi laukai turi būti užpildyti!\n      </div>\n    );\n  }\n};\n\nexport default class Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    loading: false,\n    message: \"\",\n    currentUser: \"\",\n    redirect: \"\",\n  };\n\n  onChangeUsername = (e) => {\n    this.setState({\n      username: e.target.value,\n    });\n  };\n\n  onChangePassword = (e) => {\n    this.setState({\n      password: e.target.value,\n    });\n  };\n\n  handleLogin = async (e) => {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true,\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      await AuthService.login(this.state.username, this.state.password).then(\n        () => {\n          this.props.history.push('/dis-app/home');\n          window.location.reload();\n        },\n        (error) => {\n          const resMessage = \"Neteisingi prisijungimo vardas ar slaptažodis!\";\n\n          this.setState({\n            loading: false,\n            message: resMessage,\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false,\n      });\n    }\n  };\n\n  render() {\n    if (localStorage.getItem(\"user\")) return <Redirect to={\"/dis-app/home\"} />;\n\n    return (\n      <div className=\"container col-12 col-sm-12 col-md-6 col-lg-6\">\n        <div className=\"row \">\n          <div\n            className=\"mx-auto block \"\n            style={{\n              width: '30rem',\n              marginTop: '5rem',\n              backgroundColor: '#E2E2E2',\n              paddingBottom: '1rem',\n            }}\n          >\n            <img\n              src={logo}\n              alt=\"logo\"\n              className=\"img-fluid\"\n              style={{ width: '30rem' }}\n            />\n            <Form\n              onSubmit={this.handleLogin}\n              ref={(c) => {\n                this.form = c;\n              }}\n            >\n              <div\n                className=\"form-group mx-auto mt-3\"\n                style={{ width: '10rem' }}\n              >\n                <label htmlFor=\"username\">Vartotojo vardas</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"username\"\n                  value={this.state.username}\n                  onChange={this.onChangeUsername}\n                  validations={[required]}\n                />\n              </div>\n\n              <div className=\"form-group mx-auto\" style={{ width: '10rem' }}>\n                <label htmlFor=\"password\">Slaptažodis</label>\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChangePassword}\n                  validations={[required]}\n                />\n              </div>\n\n              <div className=\"form-group text-center mt-5\">\n                <button\n                  className=\"btn btn-secondary\"\n                  disabled={this.state.loading}\n                >\n                  {this.state.loading && (\n                    <span className=\"spinner-border spinner-border-sm\"></span>\n                  )}\n                  <span>Prisijungti</span>\n                </button>\n              </div>\n\n              {this.state.message && (\n                <div className=\"form-group\">\n                  <div className=\"alert alert-danger\" role=\"alert\">\n                    {this.state.message}\n                  </div>\n                </div>\n              )}\n              <CheckButton\n                style={{ display: 'none' }}\n                ref={(c) => {\n                  this.checkBtn = c;\n                }}\n              />\n            </Form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.accessToken) {\n    return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\n    // return { \"x-access-token\": user.accessToken }; // for Node.js Express back-end\n  } else {\n    return console.log('Nera token');\n  }\n}\n","import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = process.env.PUBLIC_URL + '/api/test/';\n// const API_URL = 'http://localhost:8080/api/test/';\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + 'all');\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + 'user', { headers: authHeader() });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\n  }\n}\n\nexport default new UserService();\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\",\n    };\n  }\n\n  componentDidMount() {\n    UserService.getUserBoard().then(\n      (response) => {\n        this.setState({\n          content: response.data,\n        });\n      },\n      (error) => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString(),\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardModerator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getModeratorBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport UserService from '../services/user.service';\n\nexport default class BoardAdmin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: '',\n    };\n  }\n\n  componentDidMount() {\n    UserService.getAdminBoard().then(\n      (response) => {\n        this.setState({\n          content: response.data,\n        });\n      },\n      (error) => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString(),\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = process.env.PUBLIC_URL + '/api/admin/';\n// const API_URL = 'http://localhost:8080/api/admin/';\n\nclass AdminService {\n  createUser(body) {\n    return axios.post(API_URL + 'create', body, { headers: authHeader() });\n  }\n\n  getUsers() {\n    return axios.get(API_URL + 'getusers', { headers: authHeader() });\n  }\n\n  deleteUser(id) {\n    return axios.delete(API_URL + 'deleteuser/' + id, {\n      headers: authHeader(),\n    });\n  }\n}\n\nexport default new AdminService();\n","import React from \"react\";\n\nexport const vusername = (value) => {\n  if (value.length === 0) return;\n  if (value.length < 4 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Prisijungimo vardas turi būti sudarytas iš ne mažiau kaip 4 simbolių.{\" \"}\n      </div>\n    );\n  }\n};\n\nexport const vpassword = (value) => {\n  var paswd = /^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])[a-zA-Z0-9].{7,19}$/;\n  if (value.length === 0) return;\n\n  if (value.length < 8 || value.length > 20 || value.match(paswd) === null) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Slaptažodyje, kurį turi sudaryti iš 8–20 simbolių, turi būti bent viena\n        didžioji raidė, viena mažoji raidė ir vienas skaičius.\n      </div>\n    );\n  }\n};\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n\n    return _.get(item, column.path);\n  };\n\n  createKey = (item, column) => {\n    return item.id + (column.path || column.key);\n  };\n\n  render() {\n    const { data, columns } = this.props;\n\n    return (\n      <tbody>\n        {data.map((item) => (\n          <tr key={item.id}>\n            {columns.map((column) => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n            <td></td>\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React, { Component } from \"react\";\n\n// columns: array\n// sortColumn: object\n// onSort: function\n\nclass TableHeader extends Component {\n  raiseSort = (path) => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n\n  renderSortIcon = (column) => {\n    const { sortColumn } = this.props;\n\n    if (column.path !== sortColumn.path) return null;\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\n    return <i className=\"fa fa-sort-desc\" />;\n  };\n\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map((column) => (\n            <th\n              className=\"clickable\"\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.label} {this.renderSortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React from \"react\";\nimport TableBody from \"./TableBody\";\nimport TableHeader from \"./TableHeader\";\n\nconst Table = ({ columns, data, sortColumn, onSort }) => {\n  return (\n    <table className=\"table\">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody columns={columns} data={data} />\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { Component } from \"react\";\nimport Table from \"./Table\";\n\nclass UsersTable extends Component {\n  columns = [\n    {\n      path: \"username\",\n      label: \"Prisijungimo vardas\",\n    },\n    { path: \"role\", label: \"Rolė\" },\n    { path: \"button\", label: \"\" },\n    {\n      key: \"delete\",\n      content: (user) => (\n        <button\n          onClick={() => {\n            if (window.confirm(`Ištrinti naudotoją: ${user.username}`)) {\n              this.props.onDelete(user);\n            }\n          }}\n          className=\"btn btn-danger btn-sm\"\n        >\n          <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i>\n        </button>\n      ),\n    },\n    {\n      key: \"disable\",\n      content: (user) => (\n        <button\n          onClick={() => {\n            if (window.confirm(`Deaktyvuoti naudotoją: ${user.username}`)) {\n              this.props.onDisable(user);\n            }\n          }}\n          className=\"btn btn-warning btn-sm\"\n        >\n          <i className=\"fa fa-lock\" aria-hidden=\"true\"></i>\n        </button>\n      ),\n    },\n    {\n      key: \"reset\",\n      content: (user) => (\n        <button\n          onClick={() => {\n            if (\n              window.confirm(\n                `Atstatyti slaptažodį naudotojui: ${user.username}`\n              )\n            ) {\n              this.props.onResetPassword(user);\n            }\n          }}\n          className=\"btn btn-success btn-sm\"\n        >\n          <i className=\"fa fa-key\" aria-hidden=\"true\"></i>\n        </button>\n      ),\n    },\n  ];\n  onResetPassword;\n  render() {\n    const { users, onSort, sortColumn } = this.props;\n\n    return (\n      <Table\n        columns={this.columns}\n        data={users}\n        sortColumn={sortColumn}\n        onSort={onSort}\n      />\n    );\n  }\n}\n\nexport default UsersTable;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items)\n    .slice(startIndex)\n    .take(pageSize)\n    .value();\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n\n  return (\n    <nav>\n      <ul className=\"pagination justify-content-center\">\n        {pages.map((page) => (\n          <li\n            key={page}\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n          >\n            <button className=\"page-link\" onClick={() => onPageChange(page)}>\n              {page}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React from \"react\";\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"query\"\n      className=\"form-control my-3\"\n      placeholder=\"Paieška...\"\n      value={value}\n      onChange={(e) => onChange(e.currentTarget.value)}\n    />\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from 'react';\nimport UsersTable from './UsersTable';\nimport { paginate } from '../../utils/paginate';\nimport Pagination from '../../utils/pagination';\nimport AdminService from '../../../services/admin.service';\nimport SearchBox from './SearchBox';\nimport _ from 'lodash';\n\nclass Users extends Component {\n  state = {\n    users: [],\n    currentPage: 1,\n    pageSize: 5,\n    length: 0,\n    searchQuery: '',\n    sortColumn: { path: 'username', order: 'asc' },\n  };\n\n  componentDidMount = async () => {\n    const { data } = await AdminService.getUsers();\n    this.setState({ users: data });\n  };\n\n  handleSearch = (query) => {\n    this.setState({ searchQuery: query, currentPage: 1 });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  handleDelete = async (user) => {\n    const originalUsers = this.state.users;\n    const users = originalUsers.filter((u) => u.id !== user.id);\n    this.setState({ users });\n\n    await AdminService.deleteUser(user.id).then(\n      (response) => {\n        +response.status < 400 && alert('Naudotojas ištrintas');\n        window.location.reload();\n      },\n      (error) => {\n        this.setState({ users: originalUsers });\n        +error.response.status > 400 && alert('Ivyko klaida');\n      }\n    );\n  };\n\n  handleDisable = async (user) => {\n    console.log('Disable: ' + user);\n  };\n\n  handleResetPassword = async (user) => {\n    console.log('Reset password: ' + user);\n  };\n\n  getPagedData = (allUsers) => {\n    const { pageSize, currentPage, searchQuery, sortColumn } = this.state;\n\n    let filtered = allUsers;\n    if (searchQuery)\n      filtered = allUsers.filter((m) =>\n        m.username.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const allUsers = this.props.users;\n    const count = allUsers.length;\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\n\n    if (count === 0)\n      return (\n        <p className=\"m-4 mx-auto\" style={{ width: '290px' }}>\n          Duomenų bazėje naudotojų nėra registruota.\n        </p>\n      );\n\n    const { totalCount, data: users } = this.getPagedData(allUsers);\n\n    return (\n      <div className=\"row\">\n        <div className=\"col\">\n          <p>\n            Duomenų bazėje {allUsers.length} registruotų naudotojų. Rodomi{' '}\n            {totalCount} pagal paieškos kriterijų.\n          </p>\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\n\n          <UsersTable\n            users={users}\n            sortColumn={sortColumn}\n            onSort={this.handleSort}\n            onDelete={this.handleDelete}\n            onDisable={this.handleDisable}\n            onResetPassword={this.handleResetPassword}\n          />\n          <Pagination\n            itemsCount={allUsers.length}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Users;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport AdminService from '../../services/admin.service';\nimport CheckButton from 'react-validation/build/button';\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport AuthService from '../../services/auth.service';\nimport { vusername } from './Validation';\nimport Users from './List/Users';\n\nexport default class AdminMainPage extends Component {\n  state = {\n    users: [],\n    role: '',\n    name: '',\n    message: '',\n    successful: false,\n    selectedRole: 'ROLE_SPEC',\n    loading: false,\n    redirect: null,\n    userReady: false,\n    modalIsOpen: false,\n  };\n\n  openModal = () => {\n    this.setState({ modalIsOpen: true });\n  };\n\n  closeModal = () => {\n    this.setState({ modalIsOpen: false });\n  };\n\n  handleClearFields = () => {\n    this.setState({ name: '', pass: '' });\n  };\n\n  handleCreate = async (e) => {\n    e.preventDefault();\n    this.setState({\n      message: '',\n      loading: true,\n    });\n\n    const { name, pass, selectedRole } = this.state;\n\n    if (name === '' || pass === '') {\n      this.setState({\n        successful: false,\n        message:\n          'Prisijungimo vardo ir slaptažodžio laukas negali būti tuščias!',\n        loading: false,\n      });\n      return;\n    }\n\n    this.form.validateAll();\n    if (this.checkBtn.context._errors.length === 0) {\n      await AdminService.createUser({\n        username: name,\n        password: name,\n        role: selectedRole,\n      }).then(\n        (response) => {\n          AdminService.getUsers().then((res) =>\n            this.setState({\n              users: res.data,\n              successful: true,\n              message: response.data.message,\n              name: '',\n              loading: false,\n            })\n          );\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage,\n            loading: false,\n          });\n        }\n      );\n    }\n    this.setState({ loading: false });\n  };\n\n  async componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n    const { data } = await AdminService.getUsers();\n    this.setState({ users: data });\n\n    if (!currentUser) this.setState({ redirect: '/dis-app/' });\n    this.setState({\n      currentUser: currentUser,\n      userReady: true,\n      roles: currentUser.roles,\n    });\n  }\n\n  handleSelectChange = (e) => {\n    const selectedRole = e.target.value;\n    console.log(selectedRole);\n    this.setState({ selectedRole, message: '' });\n  };\n\n  handleInputChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value, message: '' });\n  };\n\n  render() {\n    if (this.state.redirect) return <Redirect to={this.state.redirect} />;\n\n    const { name } = this.state;\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12 col-sm-12 col-md-4 col-lg-4\">\n              <strong className=\"fw-bold text-secondary\">\n                SUKURTI NAUDOTOJĄ\n              </strong>\n              <Form\n                className=\"\"\n                ref={(c) => {\n                  this.form = c;\n                }}\n              >\n                <div className=\"mb-3\" style={{ fontSize: 14 }}>\n                  <label htmlFor=\"exampleInputUsername\" className=\"form-label\">\n                    Prisijungimo vardas\n                    <span className=\"text-danger\" style={{ fontSize: 18 }}>\n                      *\n                    </span>\n                  </label>\n                  <Input\n                    name=\"name\"\n                    onChange={this.handleInputChange}\n                    validations={[vusername]}\n                    value={name}\n                    type=\"text\"\n                    placeholder=\"VardasPavardė\"\n                    className=\"form-control\"\n                    id=\"name\"\n                    aria-describedby=\"usernameHelp\"\n                  />\n                  <div id=\"usernameHelp\" className=\"form-text text-success\">\n                    Pirminis slaptažodis yra prisijungimo vardas (sugeneruoja\n                    sistema)\n                  </div>\n                </div>\n                <div onChange={this.handleSelectChange} className=\"mb-3\">\n                  <label\n                    htmlFor=\"exampleInputPassword1\"\n                    className=\"form-label\"\n                    style={{ fontSize: 14 }}\n                  >\n                    Rolė\n                    <span className=\"text-danger\" style={{ fontSize: 18 }}>\n                      *\n                    </span>\n                  </label>\n                  <div className=\"form-check\">\n                    <input\n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      name=\"role\"\n                      id=\"ROLE_SPEC\"\n                      value=\"ROLE_SPEC\"\n                      defaultChecked\n                    />\n                    <label className=\"form-check-label\" htmlFor=\"ROLE_SPEC\">\n                      Švietimo specialistas\n                    </label>\n                  </div>\n                  <div className=\"form-check\">\n                    <input\n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      name=\"role\"\n                      id=\"ROLE_PARENT\"\n                      value=\"ROLE_PARENT\"\n                    />\n                    <label className=\"form-check-label\" htmlFor=\"ROLE_PARENT\">\n                      Vaiko atstovas\n                    </label>\n                  </div>\n                </div>\n                <button\n                  type=\"submit\"\n                  onClick={this.handleCreate}\n                  className=\"btn btn-success mr-3\"\n                  disabled={this.state.loading}\n                >\n                  {this.state.loading && (\n                    <span className=\"spinner-border spinner-border-sm\"></span>\n                  )}\n                  Sukurti\n                </button>\n                {/* <button\n                  className=\"btn btn-secondary mr-3\"\n                  onClick={this.handleClearFields}\n                >\n                  Išvalyti laukus\n                </button> */}\n                {this.state.message && (\n                  <div className=\"form-group\">\n                    <div\n                      className={\n                        this.state.successful\n                          ? 'alert alert-success'\n                          : 'alert alert-danger'\n                      }\n                      role=\"alert\"\n                    >\n                      {this.state.message}\n                    </div>\n                  </div>\n                )}\n                <CheckButton\n                  style={{ display: 'none' }}\n                  ref={(c) => {\n                    this.checkBtn = c;\n                  }}\n                />\n              </Form>\n            </div>\n            <div className=\"col\">\n              <Users users={this.state.users} />\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport AuthService from '../services/auth.service';\nimport AdminMainPage from './Admin/AdminMainPage';\n\nclass MainAfterLogin extends Component {\n  state = {\n    redirect: null,\n    userReady: false,\n    currentUser: { username: '' },\n    roles: [],\n  };\n\n  async componentDidMount() {\n    const currentUser = await AuthService.getCurrentUser();\n\n    if (!currentUser) this.setState({ redirect: '/dis-app/home' });\n\n    this.setState({\n      currentUser: currentUser,\n      userReady: true,\n      roles: currentUser.roles,\n    });\n  }\n\n  render() {\n    if (this.state.roles.indexOf('ROLE_ADMIN') > -1) return <AdminMainPage />;\n\n    return (\n      <h1>\n        Depending on role you will see content here. Parent and Spec main\n        screens has not been created yet!\n      </h1>\n    );\n  }\n}\n\nexport default MainAfterLogin;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport Navbar from './components/navbar.component';\nimport Login from './components/login.component';\nimport BoardUser from './components/board-user.component';\nimport BoardModerator from './components/board-moderator.component';\nimport BoardAdmin from './components/board-admin.component';\nimport MainAfterLogin from './components/MainAferLogin';\n\nclass App extends Component {\n  render() {\n    document.title = 'DarželiųInformacinėSistema';\n    return (\n      <div>\n        <Navbar />\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route\n              exact\n              path={['/dis-app/', '/dis-app/login']}\n              component={Login}\n            />\n            <Route exact path=\"/dis-app/home\" component={MainAfterLogin} />\n            <Route path=\"/dis-app/user\" component={BoardUser} />\n            <Route path=\"/dis-app/mod\" component={BoardModerator} />\n            <Route path=\"/dis-app/admin\" component={BoardAdmin} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'font-awesome/css/font-awesome.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}