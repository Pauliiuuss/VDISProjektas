{"version":3,"sources":["img/logo.png","services/auth.service.js","components/navbar.component.js","components/login.component.js","services/auth-header.js","services/user.service.js","components/board-user.component.js","components/board-moderator.component.js","components/board-admin.component.js","services/admin.service.js","components/Admin/Validation.js","components/Admin/List/TableHeader.jsx","components/Admin/List/TableBody.jsx","components/Admin/List/Table.jsx","components/Admin/List/UsersTable.jsx","components/utils/paginate.js","components/utils/pagination.jsx","components/Admin/List/Users.jsx","components/Admin/AdminMainPage.jsx","components/MainAferLogin.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","username","password","axios","post","API_URL","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","parse","getItem","Navbar","props","logOut","bind","state","currentUser","undefined","user","AuthService","getCurrentUser","this","setState","logout","className","src","logo","alt","style","width","to","roles","includes","fontSize","href","onClick","icon","faSignOutAlt","Component","required","value","role","Login","loading","message","redirect","onChangeUsername","e","target","onChangePassword","handleLogin","a","preventDefault","form","validateAll","checkBtn","context","_errors","length","login","history","push","window","location","reload","error","marginTop","backgroundColor","paddingBottom","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","display","authHeader","Authorization","console","log","get","headers","BoardUser","content","UserService","getUserBoard","toString","BoardModerator","getModeratorBoard","BoardAdmin","getAdminBoard","body","vusername","vpassword","match","TableHeader","columns","map","column","key","path","label","TableBody","renderCell","item","_","createKey","id","Table","UsersTable","users","paginate","items","pageNumber","pageSize","startIndex","slice","take","Pagination","itemsCount","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","Users","handlePageChange","getPagedData","paginatedUsers","totalCount","AdminService","getUsers","count","AdminMainPage","pass","successful","selectedRole","userReady","handleClearFields","handleCreate","createUser","resMessage","handleSelectChange","handleInputChange","event","placeholder","aria-describedby","defaultChecked","MainAfterLogin","indexOf","App","exact","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.933a4ae1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.86652faf.png\";","import axios from 'axios';\n\nconst API_URL = process.env.PUBLIC_URL + '/api/auth/';\n// const API_URL = 'http://localhost:8080/api/auth/';\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + 'signin', {\n        username,\n        password,\n      })\n      .then((response) => {\n        if (response.data.accessToken) {\n          localStorage.setItem('user', JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n  }\n\n  register(username, password) {\n    return axios.post(API_URL + 'signup', {\n      username,\n      password,\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n}\n\nexport default new AuthService();\n","import React, { Component } from 'react';\nimport AuthService from '../services/auth.service';\nimport logo from '../img/logo.png';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\n\nexport default class Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      currentUser: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n      });\n    }\n  }\n\n  logOut() {\n    AuthService.logout();\n  }\n\n  render() {\n    const { currentUser } = this.state;\n    return (\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark col-12 col-sm-12 col-md-12 col-lg-12\">\n        <img src={logo} alt=\"logo\" style={{ width: '5rem' }} />\n        <div className=\"navbar-nav mr-auto\"></div>\n\n        {currentUser && (\n          <div className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <Link to={'/dis-app/home'} className=\"nav-link\">\n                {currentUser.roles.includes('ROLE_SPEC') ? (\n                  <div>\n                    {currentUser.username} <br />\n                    <span style={{ fontSize: 'small' }}>\n                      (Švietimo specialistas)\n                    </span>\n                  </div>\n                ) : currentUser.roles.includes('ROLE_PARENT') ? (\n                  <div>\n                    {currentUser.username}\n                    <br />\n                    <span style={{ fontSize: 'small' }}>Vaiko atstovas</span>\n                  </div>\n                ) : (\n                  'Administratorius'\n                )}\n              </Link>\n            </li>\n            <li className=\"nav-item my-auto\">\n              <a href=\"/dis-app/\" className=\"nav-link\" onClick={this.logOut}>\n                {' '}\n                <FontAwesomeIcon icon={faSignOutAlt} />\n                Atsijungti\n              </a>\n            </li>\n          </div>\n        )}\n      </nav>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport logo from \"../img/logo.png\";\n\nimport AuthService from \"../services/auth.service\";\nimport { Redirect } from \"react-router-dom\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Privalomi laukai turi būti užpildyti!\n      </div>\n    );\n  }\n};\n\nexport default class Login extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    loading: false,\n    message: \"\",\n    currentUser: \"\",\n    redirect: \"\",\n  };\n\n  onChangeUsername = (e) => {\n    this.setState({\n      username: e.target.value,\n    });\n  };\n\n  onChangePassword = (e) => {\n    this.setState({\n      password: e.target.value,\n    });\n  };\n\n  handleLogin = async (e) => {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true,\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      await AuthService.login(this.state.username, this.state.password).then(\n        () => {\n          this.props.history.push('/dis-app/home');\n          window.location.reload();\n        },\n        (error) => {\n          const resMessage = \"Neteisingi prisijungimo vardas ar slaptažodis!\";\n\n          this.setState({\n            loading: false,\n            message: resMessage,\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false,\n      });\n    }\n  };\n\n  render() {\n    if (localStorage.getItem(\"user\")) return <Redirect to={\"/dis-app/home\"} />;\n\n    return (\n      <div className=\"container col-12 col-sm-12 col-md-6 col-lg-6\">\n        <div className=\"row \">\n          <div\n            className=\"mx-auto block \"\n            style={{\n              width: '30rem',\n              marginTop: '5rem',\n              backgroundColor: '#E2E2E2',\n              paddingBottom: '1rem',\n            }}\n          >\n            <img\n              src={logo}\n              alt=\"logo\"\n              className=\"img-fluid\"\n              style={{ width: '30rem' }}\n            />\n            <Form\n              onSubmit={this.handleLogin}\n              ref={(c) => {\n                this.form = c;\n              }}\n            >\n              <div\n                className=\"form-group mx-auto mt-3\"\n                style={{ width: '10rem' }}\n              >\n                <label htmlFor=\"username\">Vartotojo vardas</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"username\"\n                  value={this.state.username}\n                  onChange={this.onChangeUsername}\n                  validations={[required]}\n                />\n              </div>\n\n              <div className=\"form-group mx-auto\" style={{ width: '10rem' }}>\n                <label htmlFor=\"password\">Slaptažodis</label>\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  value={this.state.password}\n                  onChange={this.onChangePassword}\n                  validations={[required]}\n                />\n              </div>\n\n              <div className=\"form-group text-center mt-5\">\n                <button\n                  className=\"btn btn-secondary\"\n                  disabled={this.state.loading}\n                >\n                  {this.state.loading && (\n                    <span className=\"spinner-border spinner-border-sm\"></span>\n                  )}\n                  <span>Prisijungti</span>\n                </button>\n              </div>\n\n              {this.state.message && (\n                <div className=\"form-group\">\n                  <div className=\"alert alert-danger\" role=\"alert\">\n                    {this.state.message}\n                  </div>\n                </div>\n              )}\n              <CheckButton\n                style={{ display: 'none' }}\n                ref={(c) => {\n                  this.checkBtn = c;\n                }}\n              />\n            </Form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.accessToken) {\n    return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\n    // return { \"x-access-token\": user.accessToken }; // for Node.js Express back-end\n  } else {\n    return console.log('Nera token');\n  }\n}\n","import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = process.env.PUBLIC_URL + '/api/test/';\n// const API_URL = 'http://localhost:8080/api/test/';\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + 'all');\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + 'user', { headers: authHeader() });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\n  }\n}\n\nexport default new UserService();\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\",\n    };\n  }\n\n  componentDidMount() {\n    UserService.getUserBoard().then(\n      (response) => {\n        this.setState({\n          content: response.data,\n        });\n      },\n      (error) => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString(),\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardModerator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getModeratorBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport UserService from '../services/user.service';\n\nexport default class BoardAdmin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: '',\n    };\n  }\n\n  componentDidMount() {\n    UserService.getAdminBoard().then(\n      (response) => {\n        this.setState({\n          content: response.data,\n        });\n      },\n      (error) => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString(),\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = process.env.PUBLIC_URL + '/api/admin/';\n// const API_URL = 'http://localhost:8080/api/admin/';\n\nclass AdminService {\n  createUser(body) {\n    return axios.post(API_URL + 'create', body, { headers: authHeader() });\n  }\n\n  getUsers() {\n    return axios.post(API_URL + 'getusers', { headers: authHeader() });\n  }\n}\n\nexport default new AdminService();\n","import React from 'react';\n\nexport const vusername = (value) => {\n  if (value.length === 0) return;\n  if (value.length < 4 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Prisijungimo vardas turi būti sudarytas iš ne mažiau kaip 4 simbolių.{' '}\n      </div>\n    );\n  }\n};\n\nexport const vpassword = (value) => {\n  var paswd = /^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])[a-zA-Z0-9].{7,19}$/;\n  if (value.length === 0) return;\n\n  if (value.length < 8 || value.length > 20 || value.match(paswd) === null) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        Slaptažodyje, kurį turi sudaryti iš 8–20 simbolių, turi būti bent viena\n        didžioji raidė, viena mažoji raidė ir vienas skaičius.\n      </div>\n    );\n  }\n};\n","import React, { Component } from \"react\";\n\n// columns: array\n// sortColumn: object\n// onSort: function\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map((column) => (\n            <th key={column.path || column.key}>{column.label}</th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n\n    return _.get(item, column.path);\n  };\n\n  createKey = (item, column) => {\n    return item.id + (column.path || column.key);\n  };\n\n  render() {\n    const { data, columns } = this.props;\n\n    return (\n      <tbody>\n        {data.map((item) => (\n          <tr key={item.id}>\n            {columns.map((column) => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n            <td></td>\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React from \"react\";\nimport TableHeader from \"./TableHeader\";\nimport TableBody from \"./TableBody\";\n\nconst Table = ({ columns, data }) => {\n  return (\n    <table className=\"table\">\n      <TableHeader columns={columns} />\n      <TableBody columns={columns} data={data} />\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { Component } from \"react\";\nimport Table from \"./Table\";\n\nclass UsersTable extends Component {\n  columns = [\n    {\n      path: \"username\",\n      label: \"Prisijungimo vardas\",\n    },\n    { path: \"role\", label: \"Rolė\" },\n    { path: \"button\", label: \"\" },\n  ];\n\n  render() {\n    const { users } = this.props;\n\n    return <Table columns={this.columns} data={users} />;\n  }\n}\n\nexport default UsersTable;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items)\n    .slice(startIndex)\n    .take(pageSize)\n    .value();\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n\n  return (\n    <nav>\n      <ul className=\"pagination justify-content-center\">\n        {pages.map((page) => (\n          <li\n            key={page}\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n          >\n            <button className=\"page-link\" onClick={() => onPageChange(page)}>\n              {page}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React, { Component } from 'react';\nimport UsersTable from './UsersTable';\nimport { paginate } from '../../utils/paginate';\nimport Pagination from '../../utils/pagination';\nimport AdminService from '../../../services/admin.service';\n\nclass Users extends Component {\n  state = {\n    users: [],\n    currentPage: 1,\n    pageSize: 5,\n    length: 0,\n  };\n\n  async componentDidMount() {\n    const { data } = await AdminService.getUsers();\n    this.setState({ users: data });\n  }\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  getPagedData = () => {\n    const { pageSize, currentPage, users } = this.state;\n\n    const paginatedUsers = paginate(users, currentPage, pageSize);\n\n    return { totalCount: users.length, data: paginatedUsers };\n  };\n\n  render() {\n    const { length: count } = this.state.users;\n    const { pageSize, currentPage } = this.state;\n\n    if (count === 0)\n      return (\n        <p className=\"m-4 mx-auto\" style={{ width: '290px' }}>\n          Duomenų bazėje naudotojų nėra registruota.\n        </p>\n      );\n\n    const { totalCount, data: users } = this.getPagedData();\n\n    return (\n      <div className=\"row\">\n        <div className=\"col\">\n          <p className=\"m-4 mx-auto\" style={{ width: '320px' }}>\n            Duomenų bazėje {totalCount} registruotų naudotojų.\n          </p>\n          <UsersTable users={users} />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Users;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport AdminService from '../../services/admin.service';\nimport CheckButton from 'react-validation/build/button';\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport AuthService from '../../services/auth.service';\nimport { vpassword, vusername } from './Validation';\nimport Users from './List/Users';\n\nexport default class AdminMainPage extends Component {\n  state = {\n    users: [],\n    role: '',\n    name: '',\n    pass: '',\n    message: '',\n    successful: false,\n    selectedRole: 'ROLE_SPEC',\n    loading: false,\n    redirect: null,\n    userReady: false,\n  };\n\n  handleClearFields = () => {\n    this.setState({ name: '', pass: '' });\n  };\n\n  handleCreate = async (e) => {\n    e.preventDefault();\n    this.setState({\n      message: '',\n      loading: true,\n    });\n\n    const { name, pass, selectedRole } = this.state;\n\n    if (name === '' || pass === '') {\n      this.setState({\n        successful: false,\n        message:\n          'Prisijungimo vardo ir slaptažodžio laukas negali būti tuščias!',\n        loading: false,\n      });\n      return;\n    }\n\n    this.form.validateAll();\n    if (this.checkBtn.context._errors.length === 0) {\n      await AdminService.createUser({\n        username: name,\n        password: pass,\n        role: selectedRole,\n      }).then(\n        (response) => {\n          this.setState({\n            name: '',\n            pass: '',\n            loading: false,\n          });\n          window.location.reload();\n        },\n        (error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage,\n            loading: false,\n          });\n        }\n      );\n    }\n    this.setState({ loading: false });\n  };\n\n  async componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n    const { data } = await AdminService.getUsers();\n    this.setState({ users: data });\n\n    if (!currentUser) this.setState({ redirect: '/dis-app/' });\n    this.setState({\n      currentUser: currentUser,\n      userReady: true,\n      roles: currentUser.roles,\n    });\n  }\n\n  handleSelectChange = (e) => {\n    const selectedRole = e.target.value;\n    console.log(selectedRole);\n    this.setState({ selectedRole, message: '' });\n  };\n\n  handleInputChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value, message: '' });\n  };\n\n  render() {\n    if (this.state.redirect) return <Redirect to={this.state.redirect} />;\n\n    const { users, name, pass } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-12 col-md-4 col-lg-4\">\n            <Form\n              className=\"mt-5\"\n              ref={(c) => {\n                this.form = c;\n              }}\n            >\n              <div className=\"mb-3\">\n                <label htmlFor=\"exampleInputUsername\" className=\"form-label\">\n                  Prisijungimo vardas:\n                </label>\n                <Input\n                  name=\"name\"\n                  onChange={this.handleInputChange}\n                  validations={[vusername]}\n                  value={name}\n                  type=\"text\"\n                  placeholder=\"Įveskite prisijungimo vardą\"\n                  className=\"form-control\"\n                  id=\"name\"\n                  aria-describedby=\"usernameHelp\"\n                />\n                <div id=\"usernameHelp\" className=\"form-text text-secondary\">\n                  pvz.: VardasPavardė\n                </div>\n              </div>\n              <div className=\"mb-3\">\n                <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\n                  Slaptažodis:\n                </label>\n                <Input\n                  name=\"pass\"\n                  value={pass}\n                  onChange={this.handleInputChange}\n                  validations={[vpassword]}\n                  type=\"text\"\n                  placeholder=\"Įveskite slaptažodį\"\n                  className=\"form-control\"\n                  id=\"pass\"\n                />\n              </div>\n              <div onChange={this.handleSelectChange} className=\"mb-3\">\n                <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">\n                  Rolė:\n                </label>\n                <div className=\"form-check\">\n                  <input\n                    className=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"role\"\n                    id=\"ROLE_SPEC\"\n                    value=\"ROLE_SPEC\"\n                    defaultChecked\n                  />\n                  <label className=\"form-check-label\" htmlFor=\"ROLE_SPEC\">\n                    Švietimo specialistas\n                  </label>\n                </div>\n                <div className=\"form-check\">\n                  <input\n                    className=\"form-check-input\"\n                    type=\"radio\"\n                    name=\"role\"\n                    id=\"ROLE_PARENT\"\n                    value=\"ROLE_PARENT\"\n                  />\n                  <label className=\"form-check-label\" htmlFor=\"ROLE_PARENT\">\n                    Vaiko atstovas\n                  </label>\n                </div>\n              </div>\n\n              <button\n                type=\"submit\"\n                onClick={this.handleCreate}\n                className=\"btn btn-success mr-3\"\n                disabled={this.state.loading}\n              >\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                Sukurti\n              </button>\n              <button\n                className=\"btn btn-secondary\"\n                onClick={this.handleClearFields}\n              >\n                Išvalyti laukus\n              </button>\n              {this.state.message && (\n                <div className=\"form-group\">\n                  <div\n                    className={\n                      this.state.successful\n                        ? 'alert alert-success'\n                        : 'alert alert-danger'\n                    }\n                    role=\"alert\"\n                  >\n                    {this.state.message}\n                  </div>\n                </div>\n              )}\n              <CheckButton\n                style={{ display: 'none' }}\n                ref={(c) => {\n                  this.checkBtn = c;\n                }}\n              />\n            </Form>\n          </div>\n          <div className=\"col\">\n            <Users users={users} />\n          </div>\n        </div>\n\n        <div></div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport AuthService from '../services/auth.service';\nimport AdminMainPage from './Admin/AdminMainPage';\n\nclass MainAfterLogin extends Component {\n  state = {\n    redirect: null,\n    userReady: false,\n    currentUser: { username: '' },\n    roles: [],\n  };\n\n  async componentDidMount() {\n    const currentUser = await AuthService.getCurrentUser();\n\n    if (!currentUser) this.setState({ redirect: '/dis-app/home' });\n\n    this.setState({\n      currentUser: currentUser,\n      userReady: true,\n      roles: currentUser.roles,\n    });\n  }\n\n  render() {\n    if (this.state.roles.indexOf('ROLE_ADMIN') > -1) return <AdminMainPage />;\n\n    return (\n      <h1>\n        Depending on role you will see content here. Parent and Spec main\n        screens has not been created yet!\n      </h1>\n    );\n  }\n}\n\nexport default MainAfterLogin;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport Navbar from './components/navbar.component';\nimport Login from './components/login.component';\nimport BoardUser from './components/board-user.component';\nimport BoardModerator from './components/board-moderator.component';\nimport BoardAdmin from './components/board-admin.component';\nimport MainAfterLogin from './components/MainAferLogin';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route\n              exact\n              path={[\"/dis-app/\", \"/dis-app/login\"]}\n              component={Login}\n            />\n            <Route exact path=\"/dis-app/home\" component={MainAfterLogin} />\n            <Route path=\"/dis-app/user\" component={BoardUser} />\n            <Route path=\"/dis-app/mod\" component={BoardModerator} />\n            <Route path=\"/dis-app/admin\" component={BoardAdmin} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}